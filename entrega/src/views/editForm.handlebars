<h1 >
    Edite seu produto 
</h1>

<form id="form">
    <input class="form-control" type="text" name="code" id="code" value="{{product.code}}" placeholder="código">
    <input class="form-control" type="text" name="title" id="title" value="{{product.title}}" placeholder="título">
    <input class="form-control" type="text" name="description" id="description" value="{{product.description}}" placeholder="Descrição">
    <input class="form-control" type="text" name="price" id="price" value="{{product.price}}" placeholder="Preço">
    <input class="form-control" type="text" name="stock" id="stock" value="{{product.stock}}" placeholder="Estoque">
    <input class="form-control" type="text" name="thumbnail" id="thumbnail" value="{{product.thumbnail}}" placeholder="Thumbnail">
    <button class="edit-button" data-code="{{product.code}}" data-id="{{product._id}}" >Update</button>
</form>

<script>
  console.log('edit page');

  const editButtons = document.querySelectorAll('.edit-button');

 editButtons.forEach(button => {
    button.addEventListener('click', async () => {
      const productId = button.getAttribute('data-id');
      await editaProduto(productId);
      console.log('productId', productId);
      window.location.href = "/viewForm";
    });
  });

  async function editaProduto(id) {
    try {
      var form = new FormData(document.getElementById("form"));
      console.log('form', form);
      const response = await fetch(`/viewForm/${id}`, {
        method: 'put',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(Object.fromEntries(form))
      });
    } catch (error) {
      console.error('Erro na solicitação de exclusão:', error);
      // Exibir mensagem de erro ou realizar outra ação apropriada
    }
  }
</script> 